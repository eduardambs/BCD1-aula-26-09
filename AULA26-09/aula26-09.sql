/* Aula agrupamento*/
/*enunciado início da aula*/
drop database if exists aula_agrup;
CREATE DATABASE IF NOT EXISTS aula_agrup;
USE aula_agrup;
/* CRIAR TABELA */
CREATE TABLE IF NOT EXISTS FORNECEDOR (
IDFORNECEDOR INT,
NOME VARCHAR(45),
ENDERECO VARCHAR(45),
TELEFONE INT,
CIDADE VARCHAR(20),
EMAIL VARCHAR(25),
PRIMARY KEY (IDFORNECEDOR)
);
CREATE TABLE IF NOT EXISTS PRODUTO (
IDPRODUTO INT,
DESCRICAO VARCHAR(45),
PRECO DECIMAL(7,2),
UNIDADE VARCHAR(10),
IDFORNECEDOR INT,
PRIMARY KEY (IDPRODUTO),
FOREIGN KEY (IDFORNECEDOR) REFERENCES FORNECEDOR(IDFORNECEDOR)
ON DELETE CASCADE ON UPDATE CASCADE
/* na execução do delete ou update a ação será cascata
  se tiver registro na tabela filha será eliminado ou atualizado  */
);
INSERT INTO FORNECEDOR VALUES
(1,'PAPEL RECICLADO','RUA BRASIL,1000', 4441212, 'BRAGANÇA PAULISTA',
 'RECI@GMAIL.COM'),
(2,'CASA BAHIA','RUA DO MERCADO,200', 40338787, 'BRAGANÇA PAULISTA',
 'CASABAHIA@GMAIL.COM'),
(3,'LOJA CEM','RUA DO COMERCIO,9000', 40334455, 'BRAGANÇA PAULISTA',
 'LOJACEM@GMAIL.COM'),
(4,'MAGAZINE LUIZA','RUA PIRES PIMENTEL,500', 40331212, 'BRAGANÇA PAULISTA',
 'LUIZA@GMAIL.COM');
INSERT INTO PRODUTO VALUES
(100,'FOGAO', 800.50, 'PC',2),
(110,'GELADEIRA', 2000.70, 'PC',2),
(150,'FOGAO COOKTOP', 1300.40, 'PC',3),
(160,'AR CONDICIONADO', 1800, 'PC',4),
(170,'IMPRESSORA', 2800, 'PC',2),
(161,'NOTEBOOK', 3400, 'PC',2),
(180,'ASPIRADOR DE PO', 256, 'PC',1),
(181,'TV', 3800, 'PC',1),
(190,'TV', 3900, 'PC',2);

CREATE TABLE IF NOT EXISTS FAMILIA (
IDFAMILIA INT AUTO_INCREMENT,
DESCRICAO VARCHAR(45),
PRIMARY KEY (IDFAMILIA)
);

INSERT INTO FAMILIA VALUES
(idfamilia,'Linha Branca'),
(idfamilia, 'Informática');

select * from produto;
/*alterar a tab produto para ligar à tabela família*/
alter table PRODUTO 
add column IDFAMILIA INT,
add QTDE INT,
ADD foreign key(IDFAMILIA) references FAMILIA(IDFAMILIA)
ON DELETE CASCADE ON UPDATE CASCADE;

select * from produto;
/*atualizar a tab produto conforme dados do item 6*/

UPDATE PRODUTO 
SET IDFAMILIA=1,
	QTDE=8
WHERE IDPRODUTO=100;

UPDATE PRODUTO 
SET IDFAMILIA=1,
	QTDE=17
WHERE IDPRODUTO=110;

UPDATE PRODUTO 
SET IDFAMILIA=1,
	QTDE=10
WHERE IDPRODUTO=150;
select * from produto;
UPDATE PRODUTO 
SET IDFAMILIA=2,
	QTDE=12
WHERE IDPRODUTO>=160;

UPDATE PRODUTO 
SET IDFAMILIA=2,
	QTDE=12
WHERE IDPRODUTO=161;

UPDATE PRODUTO 
SET IDFAMILIA=2,
	QTDE=12
WHERE IDPRODUTO=170;
UPDATE PRODUTO 
SET IDFAMILIA=2,
	QTDE=12
WHERE IDPRODUTO=180;

UPDATE PRODUTO 
SET IDFAMILIA=2,
	QTDE=12
WHERE IDPRODUTO=181;

UPDATE PRODUTO 
SET IDFAMILIA=2,
	QTDE=12
WHERE IDPRODUTO=190;

/* para conferir se está ok*/

SELECT * FROM FORNECEDOR;
SELECT * FROM PRODUTO;
select * from familia;

# AULA
SELECT DISTINCT (IDFORNECEDOR) FROM PRODUTO; # mostra apenas uma ocorrência de cada elemento do IDFORNECEDOR
SELECT ALL (IDFORNECEDOR) FROM PRODUTO; # mostra todas as ocorrências do IDFORNECEDOR
UPDATE FORNECEDOR
SET CIDADE="SÃO PAULO"
WHERE IDFORNECEDOR=3;
SELECT DESCRICAO, IDPRODUTO FROM PRODUTO 
WHERE IDFORNECEDOR= ANY
(SELECT IDFORNECEDOR FROM FORNECEDOR WHERE CIDADE LIKE 'B%');

# FUNCOES PARA CONTAR
SELECT COUNT(*) FROM PRODUTO;
SELECT * FROM PRODUTO;
SELECT COUNT(IDFORNECEDOR) FROM PRODUTO WHERE DESCRICAO LIKE 'T%'; # mostra quantos produtos começam com a letra t

# somando tudo que tenho de PREÇO
SELECT SUM(PRECO) FROM PRODUTO;
SELECT SUM(PRECO) AS 'SOMA DOS PREÇOS' FROM PRODUTO; # outra forma

# SOMAR AS QUANTIDADES DOS PRODUTOS DO FORNECEDOR =2
SELECT SUM(QTDE) FROM PRODUTO WHERE IDFORNECEDOR=2;

# MAIOR PREÇO
SELECT MAX(PRECO) FROM PRODUTO;
# MENOR PREÇO
SELECT MIN(QTDE) AS MENOR FROM PRODUTO;
# MEDIA
SELECT AVG(PRECO) FROM PRODUTO;
SELECT FORMAT(AVG(PRECO),2) MEDIA FROM PRODUTO;

# mostrando o MAIOR PREÇO com DESCRIÇÃO
SELECT DESCRICAO, PRECO FROM PRODUTO ORDER BY PRECO DESC LIMIT 2;

# exibir a MEDIA e CONTAR os PRODUTOS
SELECT AVG(PRECO) AS MEDIA, COUNT(*) AS 'TOTAL DE ITENS'
FROM PRODUTO; # apenas dentro de um select trazer todos os elementos

# AGRUPAMENTO 
SELECT (CIDADE) FROM FORNECEDOR GROUP BY CIDADE;

# CONTAR quantos PRODUTOS tem CADA FAMILIA
SELECT IDFAMILIA, COUNT(*) FROM PRODUTO GROUP BY IDFAMILIA;

# SOMAR TODOS OS PREÇOS DOS PRODUTOS POR FORNECEDOR
SELECT IDFORNECEDOR, SUM(PRECO) FROM PRODUTO GROUP BY IDFORNECEDOR;
SELECT IDFORNECEDOR, SUM(PRECO) FROM PRODUTO GROUP BY 1; # outra forma de fazer o comando de cima
SELECT IDFORNECEDOR, SUM(PRECO) FROM PRODUTO GROUP BY 2 ORDER BY 1; # agrupou e ordenou pela soma

# QUAL A MÉDIA DAS QUANTIDADES POR FAMILIA
SELECT IDFAMILIA, AVG(QTDE) FROM PRODUTO GROUP BY IDFAMILIA; # pode ser também GROUP BY 1


# EXIBIR A MEDIA DOS PREÇOS POR FAMILIA QUANDO FOR MAIOR QUE 1500
SELECT IDFAMILIA, AVG(PRECO) FROM PRODUTO GROUP BY IDFAMILIA HAVING AVG(PRECO)>1500; # HAVING é a CONDIÇÃO de quando uso um GROUP BY

# EXIBIR QUANTOS PRODUTOS CADA FORNECEDOR TEM QUANDO FOR MAIOR QUE 2
SELECT IDFORNECEDOR, COUNT(QTDE) FROM PRODUTO GROUP BY 1 HAVING COUNT(QTDE)>2;